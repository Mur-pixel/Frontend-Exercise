name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env files
        run: |
          # 메인 컨테이너 환경변수
          echo "${{ secrets.MAIN_CONTAINER_ENV }}" > main-container/.env
          
          # 계정 앱 환경변수
          echo "${{ secrets.ACCOUNT_ENV }}" > vue-account-app/.env
          
          # 면접 앱 환경변수
          echo "${{ secrets.INTERVIEW_ENV }}" > vue-ai-interview-app/.env
          
          # 마이페이지 앱 환경변수
          echo "${{ secrets.MY_PAGE_ENV }}" > mypage-app/.env
          
          # 스터디룸 앱 환경변수
          echo "${{ secrets.STUDY_ROOM_ENV }}" > studyroom-app/.env
          
          # 퀴즈 및 단어사전 앱 환경변수
          echo "${{ secrets.SPOON_WORD_ENV }}" > spoon-word-app/.env
          
          # navation-bar 앱 환경변수
          echo "${{ secrets.NAVIGATION_BAR_ENV }}" > navigation-bar-app/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          driver: docker-container

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.ACTOR }}/jobspoon-frontend:latest
          platforms: linux/amd64,linux/arm64


  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, deploy-mfe-frontend ]
    steps:
      - name: Deploy to production
        run: |
          # GitHub Container Registry 로그인
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.ACTOR }} --password-stdin
          
          # 기존 컨테이너 중지 및 삭제
          docker stop jobspoon-frontend-container || true
          docker rm jobspoon-frontend-container || true
          
          # 최신 이미지 가져오기
          docker pull ghcr.io/${{ secrets.ACTOR }}/jobspoon-frontend:latest
          
          # 새 컨테이너 실행 (jobspoon-net 네트워크에 연결)
          docker run -d -p 80:80 --name jobspoon-frontend-container --network jobspoon-net ghcr.io/${{ secrets.ACTOR }}/jobspoon-frontend:latest
          
          # 사용하지 않는 이미지 정리
          docker image prune -af
